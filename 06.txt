Kubernetes Installations Instruction:


    Install OS:
        use osbox.org
        https://askubuntu.com/questions/34074/how-do-i-change-my-username
        To manage every aspect of the user database, you use the usermod tool.

        To change username and user's groupname (it is probably best to do this without being logged in):

        sudo usermod -l newUsername oldUsername
        sudo groupmod -n newUsername oldUsername
        This however, doesn't rename the home folder.

        To change home-folder, use

        sudo usermod -d /home/newHomeDir -m newUsername

        For instance, you could logout, drop to a console (Ctrl+Alt+F1), and sudo su - to become true root (as opposed to sudo -s, where $HOME is still /home/yourname.) Maybe you also have to kill some still running processes from this user first. To do so, enter ps -u username, look for the matching PID and kill them by kill PID-number.

    Configuration Network:
        set adapter 1 attached  to Bridged Adapter Name wlp2s0
        change netplan config to :
          network:
            ethernets:
              enp0s3:
                dhcp4: false
                addresses:
                  - 192.168.1.150/24
                nameservers:
                  addresses: [178.22.122.100, 185.51.200.2]
                routes:
                  - to: default
                    via: 192.168.1.1
            version: 2
            

----------------------------------------------------------------------------------------------------------

  https://www.linuxtechi.com/install-kubernetes-on-ubuntu-22-04/
    step 1: Set hostname and add entries in the hosts file:
    step 2: Disable swap :
      https://graspingtech.com/disable-swap-ubuntu/
    step 3: add kernel settings:
      https://kubernetes.io/docs/setup/production-environment/container-runtimes/


        swappoff -a # important to all step


        kubeadm init --apiserver-advertise-address=192.168.1.150 --pod-network-cidr=10.0.1.0/16 --ignore-preflight-errors=all





        To start using your cluster, you need to run the following as a regular user:

        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config

        Alternatively, if you are the root user, you can run:

        export KUBECONFIG=/etc/kubernetes/admin.conf

        You should now deploy a pod network to the cluster.
        Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
        https://kubernetes.io/docs/concepts/cluster-administration/addons/

        Then you can join any number of worker nodes by running the following on each as root:

        kubeadm join 192.168.1.150:6443 --token ppfx4b.5gdkqkj28vkljgfu \
            --discovery-token-ca-cert-hash sha256:003c14cbfbb37932674905f462809d3687aa14ea84ef459443bfbf982d75bb00 

after that you have to  install calico from calicoprojetct.org 


